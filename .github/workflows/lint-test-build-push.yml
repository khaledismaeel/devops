name: Lint, test, build, and push

on: push

jobs:
  lint-and-test:
    name: Lint-and-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app_python
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
        
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: | # no idea why though...
            ${{ runner.os }}-pip-
        
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install black
          pip install pytest
      
      - name: Lint code
        run: |
          black .
      
      - name: Test code
        run: pytest -v .
  
  build-and-push:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2
          
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Docker/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags:  ${{ secrets.DOCKER_HUB_USERNAME }}/app_python:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
        
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
